{"version":3,"sources":["components/Map/index.js","components/CountrySelect/index.js","constants/api.js","components/App/index.js","index.js"],"names":["Map","_ref","data","react_default","a","createElement","index_esm","width","height","chartType","rootProps","data-testid","options","backgroundColor","chartEvents","eventName","callback","_ref2","selection","chartWrapper","getChart","getSelection","length","region","row","console","log","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","&:before","borderColor","&:after","Empty","Fragment","JumpingDots","className","CountrySelect","onChange","classes","FormControl","Select","displayEmpty","defaultValue","IconComponent","disableUnderline","MenuItem","value","disabled","CountrySelect_JumpingDots","BASE_PATH","CRITERIAS","countries","require","API","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setCountryArray","element","result","arrData","state","Intl","NumberFormat","style","currency","minimumFractionDigits","useGrouping","Number","setState","concat","toConsumableArray","country","handleShowSearch","isSelected","handleCountryChange","event","searchCriteria","target","arrCountry","map","axios","code","then","resp","catch","error","_this$state","onClick","go_index_esm","size","components_Map","components_CountrySelect","Component","rootElement","document","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.b96c2551.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nconst Map = ({ data }) => (\r\n  <Chart\r\n    width={\"80%\"}\r\n    height={\"auto\"}\r\n    chartType=\"GeoChart\"\r\n    data={data}\r\n    // Note: you will need to get a mapsApiKey for your project.\r\n    // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\r\n    // mapsApiKey=\"YOUR_KEY_HERE\"\r\n    rootProps={{ \"data-testid\": \"1\" }}\r\n    options={{\r\n      backgroundColor: \"transparent\"\r\n    }}\r\n    chartEvents={[\r\n      {\r\n        eventName: \"select\",\r\n        callback: ({ chartWrapper }) => {\r\n          const chart = chartWrapper.getChart();\r\n          const selection = chart.getSelection();\r\n          if (selection.length === 0) return;\r\n          const region = data[selection[0].row + 1];\r\n          console.log(\"Selected : \" + region);\r\n        }\r\n      }\r\n    ]}\r\n  />\r\n);\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n    \"&:before\": {\r\n      borderColor: \"transparent\",\r\n      backgroundColor: \"transparent\"\r\n    },\r\n    \"&:after\": {\r\n      borderColor: \"transparent\",\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst Empty = () => {\r\n  return <></>;\r\n};\r\n\r\nconst JumpingDots = () => {\r\n  return (\r\n    <span className=\"jumping-dots\">\r\n      <span>.</span>\r\n      <span>.</span>\r\n      <span>.</span>\r\n    </span>\r\n  );\r\n};\r\n\r\nconst CountrySelect = ({ onChange }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"flex-container\">\r\n      <p>What country is </p>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          className={classes.selectEmpty}\r\n          onChange={onChange}\r\n          displayEmpty\r\n          defaultValue=\"\"\r\n          IconComponent={Empty}\r\n          disableUnderline={true}\r\n        >\r\n          <MenuItem value=\"\" disabled>\r\n            <JumpingDots />\r\n          </MenuItem>\r\n          <MenuItem value=\"NY.GDP.MKTP.CD\">the richest?</MenuItem>\r\n          <MenuItem value=\"SL.GDP.PCAP.EM.KD\">the richest per capita?</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountrySelect;\r\n","export const BASE_PATH = \"https://api.worldbank.org/v2/countries/\";\r\nexport const CRITERIAS = \"?date=2017&format=json\";\r\n","import React, { Component } from \"react\";\r\nimport Map from \"../Map\";\r\nimport CountrySelect from \"../CountrySelect\";\r\n// import Globe from \"../Loader\";\r\nimport axios from \"axios\";\r\nimport { GoSearch } from \"react-icons/go\";\r\nimport * as API from \"../../constants/api\";\r\nconst countries = require(\"../../countries.json\");\r\n\r\nconsole.log(\"This app is using the following API:\\n\", API.BASE_PATH);\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrData: [[\"Country\", \"Indicator\"]],\r\n      arrCountry: countries,\r\n      isSelected: false,\r\n      error: false\r\n    };\r\n  }\r\n\r\n  setCountryArray = (element, result) => {\r\n    const { arrData } = this.state;\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n      style: \"currency\",\r\n      currency: \"USD\",\r\n      minimumFractionDigits: 3,\r\n      useGrouping: true\r\n    });\r\n    // const value = formatter.format(Number(result.data[1][0].value / (10 ^ 6)));\r\n    const value = Number(result.data[1][0].value / (10 ^ 6));\r\n\r\n    this.setState({\r\n      arrData: [...arrData, [element.country, value]]\r\n    });\r\n    console.log(this.state.arrData);\r\n  };\r\n\r\n  handleShowSearch = () => {\r\n    this.setState({ isSelected: false });\r\n  };\r\n\r\n  handleCountryChange = event => {\r\n    const searchCriteria = event.target.value;\r\n    const { arrCountry } = this.state;\r\n    this.setState({ isSelected: true });\r\n\r\n    arrCountry.map(element => {\r\n      return axios(\r\n        `${API.BASE_PATH}${element.code}/indicators/${searchCriteria}${API.CRITERIAS}`\r\n      )\r\n        .then(resp => {\r\n          this.setCountryArray(element, resp);\r\n          console.log(searchCriteria);\r\n        })\r\n        .catch(error => this.setState({ error }));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { arrData, isSelected } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {isSelected ? (\r\n          <div className=\"container-search\" onClick={this.handleShowSearch}>\r\n            <GoSearch className=\"search-icon\" size={30} />\r\n          </div>\r\n        ) : null}\r\n        {isSelected ? (\r\n          <div className=\"container-map\">\r\n            <Map data={arrData} />\r\n          </div>\r\n        ) : null}\r\n        {isSelected ? null : (\r\n          <CountrySelect onChange={this.handleCountryChange} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles/styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}